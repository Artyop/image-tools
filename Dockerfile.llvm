#
# Cilium runtime base image: LLVM
# COPY output: /dep/clang /dep/llc
#
FROM docker.io/library/ubuntu:20.04 as runtime-build
LABEL maintainer="maintainer@cilium.io"
WORKDIR /tmp
RUN \
#
# Build dependencies
#
apt-get update && \
apt-get install -y --no-install-recommends \
  git ca-certificates binutils build-essential cmake ninja-build && \
#
# clang/llvm image with BPF-only backend
#
git clone -b master https://github.com/llvm/llvm-project.git llvm && \
mkdir -p llvm/llvm/build/install && \
cd llvm/ && \
git checkout -b llvmorg-10.0.0 llvmorg-10.0.0 && \
git --no-pager remote -v && \
git --no-pager log -1 && \
cd llvm/build && \
cmake .. -G "Ninja" -DLLVM_TARGETS_TO_BUILD="BPF" -DLLVM_ENABLE_PROJECTS="clang" -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=Release -DLLVM_BUILD_RUNTIME=OFF && \
ninja clang llc && \
strip bin/clang && \
strip bin/llc && \
cd ../../../ && \
mkdir /dep && \
mv /tmp/llvm/llvm/build/bin/clang /dep/clang && \
mv /tmp/llvm/llvm/build/bin/llc /dep/llc && \
rm -rf /tmp/* && \
#
# Cleanup
#
apt-get purge --auto-remove -y \
  git ca-certificates binutils build-essential cmake ninja-build && \
apt-get clean && \
rm -rf /var/lib/apt/lists/*
